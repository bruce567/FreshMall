<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd"      
    default-autowire="byName" default-lazy-init="true" >
    
    <!-- 配置数据源 -->
	<bean id="dataSource" scope="prototype" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="com.mysql.jdbc.Driver"></property>
		<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/freshmall">
		</property>
		<property name="user" value="root"></property>
		<property name="password" value="12345678"></property>
		<!--连接池中保留的最小连接数。 -->
		<property name="minPoolSize">
			<value>5</value>
		</property>
		<!--连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize">
			<value>990</value>
		</property>
		<!--初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
		<property name="initialPoolSize">
			<value>10</value>
		</property>
		<!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime">
			<value>60</value>
		</property>
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement">
			<value>5</value>
		</property>
		<!--JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements 属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。 
			如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0 -->
		<property name="maxStatements">
			<value>0</value>
		</property>
		<!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
		<property name="idleConnectionTestPeriod">
			<value>60</value>
		</property>
		<!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
		<property name="acquireRetryAttempts">
			<value>30</value>
		</property>
		<!--获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效 保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试 
			获取连接失败后该数据源将申明已断开并永久关闭。Default: false -->
		<property name="breakAfterAcquireFailure">
			<value>false</value>
		</property>
		<!--因性能消耗大请只在需要的时候使用它。如果设为true那么在每个connection提交的 时候都将校验其有效性。建议使用idleConnectionTestPeriod或automaticTestTable 
			等方法来提升连接测试的性能。Default: false -->
		<property name="testConnectionOnCheckout">
			<value>false</value>
		</property>
	</bean>
	
	<!-- 配置Jdbc模板 -->
	<bean id="namedParameterJdbcTemplate"
		class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate"
		scope="prototype">
		<constructor-arg ref="dataSource"></constructor-arg>
	</bean>
	
    <tx:annotation-driven transaction-manager="txManager"/>
    <!-- 配置javaBean实体类 --><!--属性自动配置 -->
    <bean id="adminuser" class="com.freshmall.model.AdminUser"></bean>
    <bean id="shop" class="com.freshmall.model.Shop"></bean>
    <bean id="goodstype" class="com.freshmall.model.Goodstype"></bean>
    <bean id="goods" class="com.freshmall.model.Goods"></bean>
    <bean id="coupon" class="com.freshmall.model.Coupon"></bean>
    <bean id="buy" class="com.freshmall.model.Buy"></bean>
    <bean id="cart" class="com.freshmall.model.Cart"></bean>
    <bean id="goodsevaluate" class="com.freshmall.model.Goodsevaluate"></bean>
    
    <!-- dao层类 -->
    <bean id="adminuserdao" class="com.freshmall.dao.AdminUserDao"></bean>
    <bean id="shopdao" class="com.freshmall.dao.ShopDao"></bean>
    <bean id="goodstypedao" class="com.freshmall.dao.GoodstypeDao"></bean>
    <bean id="goodsdao" class="com.freshmall.dao.GoodsDao"></bean>
    <bean id="coupondao" class="com.freshmall.dao.CouponDao"></bean>
    <bean id="buydao" class="com.freshmall.dao.BuyDao"></bean>
    <bean id="cartdao" class="com.freshmall.dao.CartDao"></bean>
    <bean id="goodsevaluatedao" class="com.freshmall.dao.GoodsevaluateDao"></bean>
    
    <!-- 上传文件 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf-8"/>
		<!-- 最大内存大小 -->
		<property name="maxInMemorySize" value="10240"/>
		<!-- 最大文件大小，-1为不限制大小 -->
		<property name="maxUploadSize" value="-1"/>
	</bean>
    
 </beans>